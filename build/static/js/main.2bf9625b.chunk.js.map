{"version":3,"sources":["serviceWorker.js","store/reducers/mainReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store/actions/actionTypes.js","store/actions/mainActions.js","components/containers/admin/AdminPanelItem.js","components/containers/admin/AdminPanel.js","components/main/Intro.js","components/main/catalog/CatalogItem.js","components/main/catalog/CartItem.js","components/main/catalog/Catalog.js","components/containers/admin/AdminEnter.js","components/containers/moderator/ModeratorEnter.js","components/containers/moderator/ModeratorPanel.js","store/actions/authActions.js","components/containers/user/SignIn.js","components/containers/user/SignUp.js","components/containers/user/Cabinet.js","components/containers/dashboard/Dashboard.js","components/main/catalog/Checkout.js","components/HOC/Router.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","items","personId","personData","orders","price","count","token","message","isReg","combineReducers","mainReducer","state","action","type","authReducer","renderItems","dispatch","a","axios","get","response","Object","entries","data","map","item","key","name","itemName","id","itemType","processing","itemProcessing","geography","itemGeography","itemCount","itemPrice","renderItemsSuccess","console","log","renderData","localStorage","userId","renderDataSuccess","userData","order","orderId","orderData","renderOrders","AdminPanelItem","showEdit","deleteHandler","event","preventDefault","delete","props","success","showHandlerModal","setState","closeEditItem","changeEditName","target","value","changeEditType","changeEditProcessing","changeEditGeography","changeEditCount","changeEditPrice","sendEditData","put","this","Modal","show","onHide","Header","closeButton","Title","Body","Form","Row","Group","as","Col","Label","Control","placeholder","defaultValue","onChange","required","Footer","variant","onClick","className","Component","connect","AdminPanel","showAdd","onAddItem","closeAddItem","changeAddName","changeAddType","changeAddProcessing","changeAddGeography","changeAddCount","changeAddPrice","sendAddData","post","validator","disabled","Table","striped","bordered","hover","index","withRouter","Intro","to","exact","Button","autoplay","src","alt","CatalogItem","addItem","CartItem","plusCount","prevState","minusCount","Catalog","cart","term","addToCart","newItem","push","searchHandler","searchingFor","x","toLowerCase","includes","searchType","searchProc","searchGeo","takeOrder","reload","card","filter","Option","Select","Search","Input","undefined","userName","placement","content","length","trigger","href","AdminEnter","login","password","loginHandler","e","passwordHandler","enterHandler","dataLogin","dataPassword","history","error","ModeratorEnter","ModeratorPanel","person","setTerm","handleClose","surname","email","phone","address","controlId","userAuth","isLogin","displayName","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","autoLogout","regSuccess","regFalse","time","setTimeout","logout","removeItem","SignIn","errorMessage","setEmail","setPassword","SignUp","repeatedPassword","setRepeatedPassword","setName","setSurname","registerHandler","validate","style","color","marginTop","Cabinet","showModal","closeModal","openModal","editHandler","logoutHandler","setPhone","setAddress","padding","marginRight","Dashboard","Checkout","Router","path","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","application","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2bf9625b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    ORDER_DATA,\n    RENDER_DATA_SUCCESS,\n    RENDER_ITEMS_SUCCESS,\n    RENDER_ORDERS\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    items: [],\n    personId: '',\n    personData: {},\n    orders: [],\n    price: null,\n    count: null,\n};\n\nexport default function mainReducer(state = initialState, action) {\n    switch(action.type) {\n        case RENDER_ITEMS_SUCCESS:\n            return {\n                ...state,\n                items: action.items\n            };\n        case RENDER_DATA_SUCCESS:\n            return {\n                ...state,\n                personId: action.personId,\n                personData: action.personData\n            };\n        case RENDER_ORDERS:\n            return {\n                ...state,\n                orders: action.orders\n            };\n        case ORDER_DATA:\n            return {\n              ...state,\n              price: action.price,\n              count: action.count\n            };\n        default:\n            return state;\n    }\n}","import {\n    AUTH_FALSE,\n    AUTH_LOGOUT,\n    AUTH_SUCCESS,\n    REG_FALSE,\n    REG_SUCCESS\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: null,\n    message: '',\n    isReg: false\n};\n\nexport default function userAuthReducer(state = initialState, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.token,\n                message: ''\n            };\n        case AUTH_FALSE:\n            return {\n                ...state,\n                message: action.message\n            };\n        case REG_SUCCESS:\n            return {\n                ...state,\n                isReg: action.isReg,\n                message: ''\n            };\n        case REG_FALSE:\n            return {\n                ...state,\n                message: action.message\n            };\n        case AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null\n            };\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\r\nimport mainReducer from \"./mainReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n    mainReducer: mainReducer,\r\n    authReducer: authReducer\r\n})","export const RENDER_ITEMS_SUCCESS = 'RENDER_ITEMS_SUCCESS';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FALSE = 'AUTH_FALSE';\nexport const REG_SUCCESS = 'REG_SUCCESS';\nexport const REG_FALSE = 'REG_FALSE';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const RENDER_DATA_SUCCESS = 'RENDER_DATA_SUCCESS';\nexport const RENDER_ORDERS = 'RENDER_ORDERS';\nexport const ORDER_DATA = 'ORDER_DATA';","import axios from \"axios\";\nimport {\n    ORDER_DATA,\n    RENDER_DATA_SUCCESS,\n    RENDER_ITEMS_SUCCESS,\n    RENDER_ORDERS\n} from \"./actionTypes\";\n\nexport function renderItems() {\n    return async dispatch => {\n        try {\n            const response = await axios.get('https://coffee-shop-f5204.firebaseio.com/items.json');\n            const items = Object.entries(response.data).map((item) => {\n                return {\n                    key: item[0],\n                    name: item[1].itemName,\n                    id: item[0],\n                    type: item[1].itemType,\n                    processing: item[1].itemProcessing,\n                    geography: item[1].itemGeography,\n                    count: item[1].itemCount,\n                    price: item[1].itemPrice,\n                }\n            });\n            return dispatch(renderItemsSuccess(items));\n        } catch (e) {\n            console.log(e)\n        }\n    }\n}\n\nexport function renderData() {\n    return async dispatch => {\n        try {\n            const response = await axios.get(`https://coffee-shop-f5204.firebaseio.com/persons/${localStorage.userId}.json`);\n            Object.entries(response.data).map((personData) => {\n                return dispatch(renderDataSuccess(personData[0], personData[1]))\n            });\n            Object.entries(response.data).map((userData) => {\n                const orders = Object.entries(userData[1].orders).map((order) => {\n                    return {\n                        orderId: order[0],\n                        orderData: order[1]\n                    }\n                });\n                return dispatch(renderOrders(orders));\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    }\n}\n\nexport function orderData(price, count) {\n    return {\n        type: ORDER_DATA,\n        price, count\n    }\n}\n\nexport function renderItemsSuccess(items) {\n    return {\n        type: RENDER_ITEMS_SUCCESS,\n        items\n    }\n}\n\nexport function renderDataSuccess(personId, personData) {\n    return {\n        type: RENDER_DATA_SUCCESS,\n        personId,\n        personData\n    }\n}\n\nexport function renderOrders(orders) {\n    return {\n        type: RENDER_ORDERS,\n        orders\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Button, message} from \"antd\";\nimport {Col, Form, Modal} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {renderItems} from \"../../../store/actions/mainActions\";\n\nclass AdminPanelItem extends Component {\n\n    state = {\n        showEdit: false,\n        name: '',\n        type: '',\n        processing: '',\n        geography: '',\n        count: '',\n        price: '',\n        items: []\n    };\n\n    deleteHandler = async event => {\n        event.preventDefault();\n        try {\n            await axios.delete(`https://coffee-shop-f5204.firebaseio.com/items/${this.props.id}.json`);\n            this.props.renderItems();\n            message.success('Товар успешно удален');\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    showHandlerModal = () => {\n        this.setState({showEdit: true})\n    };\n\n    closeEditItem = () => {\n        this.setState({showEdit: false})\n    };\n\n    changeEditName = event => {\n        this.setState({name: event.target.value});\n    };\n    changeEditType = event => {\n        this.setState({type: event.target.value});\n    };\n    changeEditProcessing = event => {\n        this.setState({processing: event.target.value});\n    };\n    changeEditGeography = event => {\n        this.setState({geography: event.target.value});\n    };\n    changeEditCount = event => {\n        this.setState({count: event.target.value});\n    };\n    changeEditPrice = event => {\n        this.setState({price: event.target.value});\n    };\n\n    sendEditData = async () => {\n        try  {\n            await axios.put(`https://coffee-shop-f5204.firebaseio.com/items/${this.props.id}.json`, {\n                itemName: this.state.name || this.props.name,\n                itemType: this.state.type || this.props.type,\n                itemProcessing: this.state.processing || this.props.processing,\n                itemGeography: this.state.geography || this.props.geography,\n                itemCount: this.state.count || this.props.count,\n                itemPrice: this.state.price || this.props.price\n            });\n            this.setState({showEdit: false});\n            this.props.renderItems();\n            message.success('Item was successfully edited');\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    render() {\n        const item = this.props;\n        return (\n            <>\n                <Modal show={this.state.showEdit} onHide={this.closeEditItem}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Редактировать</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Название</Form.Label>\n                                    <Form.Control type={'text'} placeholder={'Введите название'} defaultValue={item.name} onChange={this.changeEditName} />\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Тип</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue={item.type} onChange={this.changeEditType}>\n                                        <option value={'Арабика'}>Арабика</option>\n                                        <option value={'Робуста'}>Робуста</option>\n                                        <option value={'Микс кофе'}>Микс кофе</option>\n                                        <option value={'Микс Арабика'}>Микс Арабика</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Обработка</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue={item.processing} onChange={this.changeEditProcessing}>\n                                        <option value={'Сухой'}>Сухой</option>\n                                        <option value={'Промытый'}>Промытый</option>\n                                        <option value={'Остальное'}>Остальное</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>География</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue={item.geography} onChange={this.changeEditGeography} required>\n                                        <option value={'Африка'}>Африка</option>\n                                        <option value={'Йемен'}>Йемен</option>\n                                        <option value={'Уганда'}>Уганда</option>\n                                        <option value={'Азия'}>Азия</option>\n                                        <option value={'Северная Америка'}>Северная Америка</option>\n                                        <option value={'Южная Америка'}>Южная Америка</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Количество</Form.Label>\n                                    <Form.Control type={'number'} placeholder={'Введите количество'} defaultValue={item.count} onChange={this.changeEditCount} />\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Цена Р</Form.Label>\n                                    <Form.Control type={'number'} placeholder={'Введите цену'} defaultValue={item.price} onChange={this.changeEditPrice} />\n                                </Form.Group>\n                            </Form.Row>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeEditItem}>\n                            Закрыть\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.sendEditData}>\n                            Редактировать товар\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <tr>\n                    <td>{item.name}</td>\n                    <td>{item.type}</td>\n                    <td>{item.processing}</td>\n                    <td>{item.geography}</td>\n                    <td>{item.count}</td>\n                    <td>{item.price}</td>\n                    <td>\n                        <Button variant={'primary'} onClick={this.deleteHandler}><i className={'fa fa-trash'} /></Button>\n                        <Button variant={'primary'} onClick={this.showHandlerModal}><i className={'fa fa-pen'} /></Button>\n                    </td>\n                </tr>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.mainReducer.items\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        renderItems: () => dispatch(renderItems())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanelItem);","import React, {Component} from 'react';\nimport {Button, message} from 'antd';\nimport {Form, Modal, Col, Table} from \"react-bootstrap\";\nimport axios from 'axios';\nimport AdminPanelItem from \"./AdminPanelItem\";\nimport {connect} from \"react-redux\";\nimport {renderItems} from \"../../../store/actions/mainActions\";\nimport {withRouter} from \"react-router-dom\";\n\nclass AdminPanel extends Component {\n\n    state = {\n        showAdd: false,\n        name: '',\n        type: 'Арабика',\n        processing: 'Сухой',\n        geography: 'Африка',\n        count: '',\n        price: '',\n        items: []\n    };\n\n    componentDidMount() {\n        this.props.renderItems()\n    }\n\n    onAddItem = () => {\n      this.setState({showAdd: true})\n    };\n\n    closeAddItem = () => {\n        this.setState({showAdd: false})\n    };\n\n    changeAddName = event => {\n        this.setState({name: event.target.value});\n    };\n    changeAddType = event => {\n        this.setState({type: event.target.value});\n    };\n    changeAddProcessing = event => {\n        this.setState({processing: event.target.value});\n    };\n    changeAddGeography = event => {\n        this.setState({geography: event.target.value});\n    };\n    changeAddCount = event => {\n        this.setState({count: event.target.value});\n    };\n    changeAddPrice = event => {\n        this.setState({price: event.target.value});\n    };\n\n    sendAddData = async () => {\n        try  {\n            await axios.post('https://coffee-shop-f5204.firebaseio.com/items.json', {\n                itemName: this.state.name,\n                itemType: this.state.type,\n                itemProcessing: this.state.processing,\n                itemGeography: this.state.geography,\n                itemCount: this.state.count,\n                itemPrice: this.state.price\n            });\n            this.setState({showAdd: false});\n            message.success('Товар успешно добавлен');\n            this.props.renderItems();\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    render() {\n        const validator = (this.state.name === '') ||\n            (this.state.type === '') ||\n            (this.state.processing === '') ||\n            (this.state.geography === '') ||\n            (this.state.count === '') ||\n            (this.state.price === '');\n        return (\n            <div className=\"AdminPanel\">\n                <Modal show={this.state.showAdd} onHide={this.closeAddItem}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Добавить новый товар</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Название</Form.Label>\n                                    <Form.Control type={'text'} placeholder={'Введите название'} onChange={this.changeAddName} />\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Тип кофе</Form.Label>\n                                    <Form.Control as=\"select\" value={this.state.type} onChange={this.changeAddType}>\n                                        <option value={'Арабика'}>Арабика</option>\n                                        <option value={'Робуста'}>Робуста</option>\n                                        <option value={'Микс кофе'}>Микс кофе</option>\n                                        <option value={'Микс Арабика'}>Микс Арабика</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Обработка</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue={'Сухой'} onChange={this.changeAddProcessing}>\n                                        <option value={'Сухой'}>Сухой</option>\n                                        <option value={'Промытый'}>Промытый</option>\n                                        <option value={'Остальное'}>Остальное</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>География</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue={'Африка'} onChange={this.changeAddGeography} required>\n                                        <option value={'Африка'}>Африка</option>\n                                        <option value={'Йемен'}>Йемен</option>\n                                        <option value={'Уганда'}>Уганда</option>\n                                        <option value={'Азия'}>Азия</option>\n                                        <option value={'Северная Америка'}>Северная Америка</option>\n                                        <option value={'Южная Америка'}>Южная Америка</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Количество</Form.Label>\n                                    <Form.Control type={'number'} placeholder={'Введите количество'} onChange={this.changeAddCount} />\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Цена Р</Form.Label>\n                                    <Form.Control type={'number'} placeholder={'Введите цену'} onChange={this.changeAddPrice} />\n                                </Form.Group>\n                            </Form.Row>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeAddItem}>\n                            Закрыть\n                        </Button>\n                        {validator ?\n                            <Button variant=\"primary\" disabled>\n                                Добавить новый товар\n                            </Button> :\n                            <Button variant=\"primary\" onClick={this.sendAddData}>\n                                Добавить новый товар\n                            </Button>\n                        }\n                    </Modal.Footer>\n                </Modal>\n\n                <div className=\"AdminPanel__header\">\n                    <p>Панель администрирования</p>\n                    <Button type={'primary'} onClick={this.onAddItem}>Добавить</Button>\n                </div>\n                <div className=\"AdminPanel__content\">\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Название</th>\n                            <th>Тип</th>\n                            <th>Обработка</th>\n                            <th>География</th>\n                            <th>Количество</th>\n                            <th>Цена</th>\n                            <th>Действия</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.props.items.map((item, index) => {\n                            return (\n                                <AdminPanelItem\n                                    key={item+index}\n                                    id={item.key}\n                                    name={item.name}\n                                    type={item.type}\n                                    processing={item.processing}\n                                    geography={item.geography}\n                                    count={item.count}\n                                    price={item.price}\n                                />\n                            )\n                        })}\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.mainReducer.items\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        renderItems: () => dispatch(renderItems())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminPanel));","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Carousel} from \"antd\";\r\n\r\nexport const Intro = () => {\r\n  return (\r\n      <div className={'Intro'}>\r\n          <div className=\"Intro__text\">\r\n              <h1>Fe <span>Лучший онлайн магазин кофе в твоем регионе!</span></h1>\r\n              <NavLink to={'/catalog'} exact>\r\n                  <Button variant={'primary'}>Посмотреть каталог</Button>\r\n              </NavLink>\r\n              <small>*Выберите кофе, который подходит именно вам!</small>\r\n          </div>\r\n          <div className=\"Intro__container\">\r\n              <div className=\"Intro__container_about\">\r\n                  <h3>Мы производим кофе с 1993 года</h3>\r\n                  <p>Мы предлагаем широкий ассортимент элитного кофе, который производится по самым высоким мировым стандартам SPECIALTY, в соответствии с которым при производстве используются исключительно свежеобжаренные мытые кофейные зерна высокогорной Арабики, которые собираются вручную и подвергаются 10 ступеням отбора, обработки и сортировки. Для кофе применяется темная и средняя обжарка, а каждый вид отличается своими неповторимыми особенностями, которые могут оценить истинные любители этого напитка.</p>\r\n              </div>\r\n              <Carousel autoplay>\r\n                  <div className={'item'}>\r\n                      <img src=\"https://i.pinimg.com/originals/1d/70/6e/1d706eb9f84d62d3c71f14f4a076d1f5.jpg\" alt=\"\"/>\r\n                  </div>\r\n                  <div className={'item'}>\r\n                      <img src=\"https://wallpaperaccess.com/full/1320593.jpg\" alt=\"\"/>\r\n                  </div>\r\n                  <div className={'item'}>\r\n                      <img src=\"https://i.pinimg.com/originals/09/52/e9/0952e9d8c44d9e1fcc1e9b6da06ca49c.jpg\" alt=\"\"/>\r\n                  </div>\r\n                  <div className={'item'}>\r\n                      <img src=\"https://coffeebreak.life/wp-content/uploads/2018/02/Contact-Us.jpg\" alt=\"\"/>\r\n                  </div>\r\n              </Carousel>\r\n              <div className=\"Intro__container_also\">\r\n                  <img src=\"https://png-library.net/images/coffee-cup-png-image-1.png\" alt=\"\"/>\r\n                  <div>\r\n                      <h3>Акция!</h3>\r\n                      <p>Вы можете сделать первый заказ прямо сейчас, и получите подарочный набор с 400г натуральной арабики!</p>\r\n                      <NavLink to={'/catalog'}>\r\n                          <Button variant={'primary'}>Сделать заказ</Button>\r\n                      </NavLink>\r\n                  </div>\r\n              </div>\r\n              <hr/>\r\n              <div className={'Intro__container_another'}>\r\n                  <h3>Зарегестрируйтесь!</h3>\r\n                  <p>Создайте свой аккаунт и мы сделаем вам очень выгодные скидки и предложения!</p>\r\n                  <NavLink to={'/login'}>\r\n                      <Button variant={'primary'}>Зарегестрироваться</Button>\r\n                  </NavLink>\r\n              </div>\r\n          </div>\r\n          <footer>\r\n              <p>Fe, 2020 (c) Copyright</p>\r\n          </footer>\r\n      </div>\r\n  )\r\n};","import React, {Component} from 'react';\nimport {Button} from \"react-bootstrap\";\n\nclass CatalogItem extends Component {\n    render() {\n        const item = this.props;\n        return (\n            <div className=\"col-xl-3 col-lg-4 CatalogItem\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        \"{item.name}\"\n                    </div>\n                    <div className=\"card-body\">\n                        <Button variant={'success'} onClick={this.props.addItem}><i className=\"fas fa-plus\"/></Button>\n                        <h5><span>{item.price}₽</span> за 500 грамм</h5>\n                        <ul>\n                            <li>‧ {item.type}</li>\n                            <li>‧ {item.processing}</li>\n                            <li>‧ {item.geography}</li>\n                            <li>‧ Количество: <b>{item.count}</b></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CatalogItem;","import React, {Component} from 'react';\nimport {Button} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {orderData} from \"../../../store/actions/mainActions\";\n\nclass CartItem extends Component {\n    state = {\n      count: 1\n    };\n\n    componentDidUpdate() {\n        const price = this.props.price*this.state.count;\n        const count = this.state.count;\n        this.props.orderData(price, count);\n    };\n\n    plusCount = () => {\n      this.setState(prevState => {\n          return {\n              ...prevState,\n              count: prevState.count + 1\n          }\n      })\n    };\n    minusCount = () => {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                count: prevState.count - 1\n            }\n        })\n    };\n\n\n    render() {\n        return (\n            <div className={'card-body CartItem'}>\n                <div className=\"CartItem__name\">\n                    <h6>Название:</h6>\n                    <h6>{this.props.name}</h6>\n                </div>\n                <div className=\"CartItem__count\">\n                    <p>Количество:</p>\n                    <div className={'cart-buttons'}>\n                        <Button onClick={this.plusCount}>+</Button>\n                        {this.state.count > 1 ?\n                            <Button onClick={this.minusCount}>-</Button> :\n                            <Button disabled>-</Button>\n                        }\n                    </div>\n                    <p>{this.state.count}</p>\n                </div>\n                <div className=\"CartItem__price\">\n                    <p>Цена</p>\n                    <h6><b>{this.props.price*this.state.count}Р</b> за {this.state.count} штук</h6>\n                </div>\n                <Button type={'danger'} onClick={() => this.props.deleteHandler(this.props.name)}><i className={'fa fa-trash'}/></Button>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        orderData: (price, count) =>  dispatch(orderData(price, count)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CartItem);","import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {Input, Select, Popover, Badge, message} from 'antd';\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {renderData, renderItems} from \"../../../store/actions/mainActions\";\r\nimport {connect} from \"react-redux\";\r\nimport CatalogItem from \"./CatalogItem\";\r\nimport CartItem from \"./CartItem\";\r\nimport axios from 'axios';\r\n\r\nclass Catalog extends Component {\r\n\r\n    state = {\r\n      cart: [],\r\n        term: '',\r\n        target: ''\r\n    };\r\n\r\n    addToCart = (item) => {\r\n        const cart = [...this.state.cart];\r\n        const newItem = {\r\n            name: item.name,\r\n            price: item.price\r\n        };\r\n        cart.push(newItem);\r\n        this.setState({cart});\r\n        message.success('Товар добавлен в корзину');\r\n    };\r\n\r\n    searchHandler = event => {\r\n        this.setState({\r\n            term: event.target.value,\r\n            target: 'name'\r\n        })\r\n    };\r\n\r\n    searchingFor = value => {\r\n        if (this.state.target === 'name') {\r\n            return function(x) {\r\n                return (x.name.toLowerCase()).includes(value.toLowerCase()) || !value\r\n            }\r\n        } else if (this.state.target === 'type') {\r\n            return function(x) {\r\n                return (x.type.toLowerCase()).includes(value.toLowerCase()) || !value\r\n            }\r\n        } else if (this.state.target === 'proc') {\r\n            return function(x) {\r\n                return (x.processing.toLowerCase()).includes(value.toLowerCase()) || !value\r\n            }\r\n        } else if (this.state.target === 'geo') {\r\n            return function(x) {\r\n                return (x.geography.toLowerCase()).includes(value.toLowerCase()) || !value\r\n            }\r\n        } else {\r\n            return function(x) {\r\n                return (x.name.toLowerCase()).includes(value.toLowerCase()) || !value\r\n            }\r\n        }\r\n    };\r\n\r\n    searchType = value => {\r\n        this.setState({\r\n            term: value,\r\n            target: 'type'\r\n        })\r\n    };\r\n\r\n    searchProc = value => {\r\n        this.setState({\r\n            term: value,\r\n            target: 'proc'\r\n        })\r\n    };\r\n\r\n    searchGeo = value => {\r\n        this.setState({\r\n            term: value,\r\n            target: 'geo'\r\n        })\r\n    };\r\n\r\n    takeOrder = async () => {\r\n        await axios.post(`https://coffee-shop-f5204.firebaseio.com/persons/${localStorage.userId}/${this.props.personId}/orders.json`, this.state.cart);\r\n        window.location.reload();\r\n        message.success('Заказ успешно сделан, спасибо!');\r\n        this.setState({card: []});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.renderItems();\r\n        this.props.renderData();\r\n    };\r\n\r\n    deleteHandler = name => {\r\n        const cart = this.state.cart.filter(item => item.name !== name);\r\n\r\n        this.setState({cart})\r\n    };\r\n\r\n    render() {\r\n        const { Option } = Select;\r\n        const { Search } = Input;\r\n        return (\r\n            <div className={'Catalog'}>\r\n                <div className=\"Catalog__main container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"Catalog__filters col-lg-3\">\r\n                            <h3>Фильтры</h3>\r\n                            <Search\r\n                                placeholder=\"Найти кофе\"\r\n                                onChange={this.searchHandler}\r\n                            />\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Тип\r\n                                    </Form.Label>\r\n                                    <Select defaultValue=\"Арабика\" onChange={this.searchType}>\r\n                                        <Option value=\"Арабика\">Арабика</Option>\r\n                                        <Option value=\"Робуста\">Робуста</Option>\r\n                                        <Option value=\"Микс кофе\">Микс кофе</Option>\r\n                                        <Option value=\"Микс Арабика\">Микс Арабика</Option>\r\n                                    </Select>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Обработка\r\n                                    </Form.Label>\r\n                                    <Select defaultValue=\"Сухой\" onChange={this.searchProc}>\r\n                                        <Option value=\"Сухой\">Сухой</Option>\r\n                                        <Option value=\"Промытый\">Промытый</Option>\r\n                                        <Option value=\"Остальное\">Остальное</Option>\r\n                                    </Select>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        География\r\n                                    </Form.Label>\r\n                                    <Select defaultValue=\"Африка\" onChange={this.searchGeo}>\r\n                                        <Option value=\"Африка\">Африка</Option>\r\n                                        <Option value=\"Йемен\">Йемен</Option>\r\n                                        <Option value=\"Уганда\">Уганда</Option>\r\n                                        <Option value=\"Азия\">Азия</Option>\r\n                                        <Option value=\"Северная Америка\">Северная Америка</Option>\r\n                                        <Option value=\"Южная Америка\">Южная Америка</Option>\r\n                                    </Select>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"Catalog__content container-fluid col-lg-9\">\r\n                            <div className=\"row\">\r\n                                <div className=\"Catalog__content_header col-lg-12\">\r\n                                    {localStorage.userName !== undefined ?\r\n                                        <div className=\"enter\">\r\n                                            <NavLink to={'/cabinet'}>{localStorage.userName}</NavLink>\r\n                                        </div> :\r\n                                        <div className=\"enter\">\r\n                                            <NavLink to={'/login'}>Войти</NavLink>\r\n                                            <NavLink to={'/reg'}>Зарегестрироваться</NavLink>\r\n                                        </div>\r\n                                    }\r\n                                    <Popover\r\n                                        placement=\"rightBottom\"\r\n                                        content={\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-header\">\r\n                                                    <p>Корзина</p>\r\n                                                    <p>{this.state.cart.length} товаров</p>\r\n                                                </div>\r\n                                                {this.state.cart.length === 0 ? null :\r\n                                                    this.state.cart.map((item, index) => {\r\n                                                        return (\r\n                                                            <CartItem\r\n                                                                key={item+index}\r\n                                                                item={item}\r\n                                                                name={item.name}\r\n                                                                price={item.price}\r\n                                                                takeOrder={this.takeOrder}\r\n                                                                deleteHandler={this.deleteHandler}\r\n                                                            />\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                <div className=\"card-footer\">\r\n                                                    {localStorage.userName !== undefined ?\r\n                                                        <Button variant={'success'} onClick={this.takeOrder}>Оформить</Button> :\r\n                                                        <NavLink to={'/login'}>\r\n                                                            <Button variant={'success'}>Оформить</Button>\r\n                                                        </NavLink>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        trigger=\"click\"\r\n                                    >\r\n                                        <Badge count={this.state.cart.length} className={'cart'}>\r\n                                            <a href=\"/\" className=\"head-example\">\r\n                                                <i className=\"fas fa-shopping-cart\"/>\r\n                                            </a>\r\n                                        </Badge>\r\n                                    </Popover>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Catalog__content_container\">\r\n                                <div className=\"row\">\r\n                                    {this.props.items.filter(this.searchingFor(this.state.term)).map((item, index) => {\r\n                                        return (\r\n                                            <CatalogItem\r\n                                                key={item+index}\r\n                                                id={item.key}\r\n                                                name={item.name}\r\n                                                type={item.type}\r\n                                                processing={item.processing}\r\n                                                geography={item.geography}\r\n                                                count={item.count}\r\n                                                price={item.price}\r\n                                                addItem={() => this.addToCart(item)}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        items: state.mainReducer.items,\r\n        personId: state.mainReducer.personId,\r\n        price: state.mainReducer.price,\r\n        count: state.mainReducer.count,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        renderItems: () => dispatch(renderItems()),\r\n        renderData: () => dispatch(renderData())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Catalog));","import React, {Component} from 'react';\nimport {Button, Form} from \"react-bootstrap\";\nimport {NavLink, withRouter} from \"react-router-dom\";\nimport {message} from 'antd';\nimport axios from 'axios'\n\nclass AdminEnter extends Component {\n\n    state = {\n      login: '',\n      password: ''\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get('https://coffee-shop-f5204.firebaseio.com/admins.json');\n            this.setState({\n                dataLogin: response.data.login,\n                dataPassword: response.data.password\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    loginHandler = e => {\n      this.setState({login: e.target.value});\n    };\n\n    passwordHandler = e => {\n        this.setState({password: e.target.value});\n    };\n\n    enterHandler = () => {\n        if ((this.state.login === this.state.dataLogin) && (this.state.password === this.state.dataPassword)) {\n            this.props.history.push('/moderPanel')\n        } else {\n            message.error('Данные введены неверно')\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"AdminEnter\">\n                <h2>Панель Администрирования</h2>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Логин</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Логин\" onChange={this.loginHandler} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Пароль</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Пароль\" onChange={this.passwordHandler} />\n                    </Form.Group>\n                    <Button variant={'primary'} onClick={this.enterHandler}>Войти в панель</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AdminEnter);","import React, {Component} from 'react';\nimport {Button, Form} from \"react-bootstrap\";\nimport {withRouter} from \"react-router-dom\";\nimport {message} from \"antd\";\nimport axios from 'axios'\n\nclass ModeratorEnter extends Component {\n\n    state = {\n        login: '',\n        password: ''\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get('https://coffee-shop-f5204.firebaseio.com/moders.json');\n            this.setState({\n                dataLogin: response.data.login,\n                dataPassword: response.data.password\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    loginHandler = e => {\n        this.setState({login: e.target.value});\n    };\n\n    passwordHandler = e => {\n        this.setState({password: e.target.value});\n    };\n\n    enterHandler = () => {\n        if ((this.state.login === this.state.dataLogin) && (this.state.password === this.state.dataPassword)) {\n            this.props.history.push('/adminPanel')\n        } else {\n            message.error('Данные введены неверно')\n        }\n    };\n\n    render() {\n        return (\n            <div className={'ModeratorEnter'}>\n                <h2>Панель модератора</h2>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Логин</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Логин\" onChange={this.loginHandler} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Пароль</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Пароль\" onChange={this.passwordHandler} />\n                    </Form.Group>\n                    <Button variant={'primary'} onClick={this.enterHandler}>Войти в панель</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ModeratorEnter);","import React, {Component} from 'react';\nimport {Button, Form, Modal, Table} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\nimport {message} from \"antd\";\n\nclass ModeratorPanel extends Component {\n\n    state = {\n      term: '',\n      show: false,\n      person: []\n    };\n\n    setTerm = e => {\n      this.setState({term: e.target.value});\n    };\n\n    searchHandler = async (e) => {\n        e.preventDefault();\n\n        if (this.state.term !== '') {\n            try {\n                const response = await axios.get(`https://coffee-shop-f5204.firebaseio.com/persons/${this.state.term}.json`)\n                const person = Object.entries(response.data).map(item => {\n                    return {\n                        ...item[1]\n                    }\n                });\n\n                this.setState({person});\n                this.setState({show: true});\n            } catch (e) {\n                message.error('ID введено не верно, или пользователя не существует');\n            }\n        } else {\n            message.error('Введите id, пожалуйста');\n        }\n    };\n\n    handleClose = () => {\n        this.setState({show: false})\n    };\n\n    render() {\n        return (\n            <div className={'ModeratorPanel'}>\n\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Данные пользователя</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.person.map((item, index) => (\n                            <div key={index}>\n                                <p>{item.name + \" \" + item.surname}</p>\n                                <p><b>Email: </b> {item.email}</p>\n                                <p><b>Телефон: </b> {item.phone ? item.phone : 'Отсутствует'}</p>\n                                <p><b>Адрес: </b> {item.address ? item.address : 'Отсутствует'}</p>\n                                <br/>\n                                {Object.entries(item.orders).map((order, index) => {\n                                    return (\n                                        <div key={index} className={'card'}>\n                                            <div className={'card-body'}>\n                                                <h6>Заказ №{index + 1}</h6>\n                                                <hr/>\n                                                {order[1].map((item, index) => {\n                                                    return (\n                                                        <div key={index} className={'card'}>\n                                                            <div className=\"card-body\">\n                                                                <h6>Товар №{index + 1}</h6>\n                                                                <p><b>Название: </b>{item.name}</p>\n                                                                <p><b>Цена: </b>{item.price}</p>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                                {/*{item.orders.map((order, index) => {*/}\n                                {/*    console.log(order)*/}\n                                {/*})}*/}\n                            </div>\n                        ))}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Закрыть\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <div className=\"ModeratorPanel__header\">\n                    <p>Панель модератора</p>\n                </div>\n                <div className=\"ModeratorPanel__content\">\n\n\n                    <Form>\n                        <h3>Введите Id пользователя для просмотра данных</h3>\n                        <br/>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>ID пользователя</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Введите id\" onChange={this.setTerm} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.searchHandler}>\n                            Найти\n                        </Button>\n                    </Form>\n\n                    {/*<Table striped bordered hover>*/}\n                    {/*    <thead>*/}\n                    {/*    <tr>*/}\n                    {/*        <th>Имя</th>*/}\n                    {/*        <th>Почта</th>*/}\n                    {/*        <th>Телефон</th>*/}\n                    {/*        <th>Телефон</th>*/}\n                    {/*    </tr>*/}\n                    {/*    </thead>*/}\n                    {/*    <tbody>*/}\n                    {/*    <tr>*/}\n                    {/*        <td>Bushido</td>*/}\n                    {/*        <td>25</td>*/}\n                    {/*        <td>27 June, 2020</td>*/}\n                    {/*        <td>27 June, 2020</td>*/}\n                    {/*    </tr>*/}\n                    {/*    </tbody>*/}\n                    {/*</Table>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        orders: state.mainReducer.orders\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // renderOrders: () => dispatch(renderOrders())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModeratorPanel);","import axios from 'axios';\nimport {AUTH_FALSE, AUTH_LOGOUT, AUTH_SUCCESS, REG_FALSE, REG_SUCCESS} from \"./actionTypes\";\n\nexport function userAuth(email, password, isLogin, name, surname) {\n    return async dispatch => {\n        const displayName = `${name} ${surname}`;\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true,\n            displayName\n        };\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAkQ70B3-P2xmVB8Ak7N_Q3kASEuZ12aB4';\n\n        if(isLogin) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAkQ70B3-P2xmVB8Ak7N_Q3kASEuZ12aB4';\n            try {\n                const response = await axios.post(url, authData);\n                const data = response.data;\n                const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n\n                // expirationDate - служит для того, чтобы отслеживать сколько пользователь провел в сессии (Для localStorage)\n                localStorage.setItem('token', data.idToken);\n                localStorage.setItem('userId', data.localId);\n                localStorage.setItem('userName', data.displayName);\n                localStorage.setItem('expirationDate', expirationDate);\n\n                dispatch(authSuccess(data.idToken));\n                dispatch(autoLogout(data.expiresIn))\n            } catch {\n                const errorMessage = 'Invalid Email or password';\n                dispatch(authFalse(errorMessage))\n            }\n        } else {\n            try {\n                const response = await axios.post(url, authData);\n                const data = response.data;\n                //Добавим пользователя в БД юзеров с его новыми данными\n                await axios.post(`https://coffee-shop-f5204.firebaseio.com/persons/${data.localId}.json`, {\n                    name,\n                    surname,\n                    email\n                });\n                const isReg = true;\n                dispatch(regSuccess(isReg))\n            } catch {\n                const errorMessage = 'This Email is already exists';\n                dispatch(regFalse(errorMessage))\n            }\n        }\n    }\n}\n\nexport function authSuccess(token) {\n    return {\n        type: AUTH_SUCCESS,\n        token\n    }\n}\n\nexport function authFalse(message) {\n    return {\n        type: AUTH_FALSE,\n        message\n    }\n}\n\nexport function regFalse(message) {\n    return {\n        type: REG_FALSE,\n        message\n    }\n}\n\nexport function regSuccess(isReg) {\n    return {\n        type: REG_SUCCESS,\n        isReg\n    }\n}\n\nexport function autoLogout(time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, time * 1000)\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userName');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: AUTH_LOGOUT\n    }\n}","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {userAuth} from \"../../../store/actions/authActions\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {message} from \"antd\";\nimport {Redirect} from \"react-router-dom\";\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n        errorMessage: ''\n    };\n    setEmail = event => {\n        this.setState({email: event.target.value})\n    };\n    setPassword = event => {\n        this.setState({password: event.target.value})\n    };\n    loginHandler = async event => {\n        event.preventDefault();\n        this.props.userAuth(\n            this.state.email,\n            this.state.password,\n            true\n        );\n    };\n    render() {\n        return (\n            <div className={'SignIn'}>\n                {this.props.message !== '' ?\n                    message.error(`${this.props.message}`) : null\n                }\n                <div className=\"SignIn__content\">\n                    <h1>Войти в аккаунт</h1>\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control type=\"email\" placeholder=\"Введите email\" onChange={this.setEmail} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Control type=\"password\" placeholder=\"Введите пароль\" onChange={this.setPassword} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.loginHandler}>\n                            Войти\n                        </Button>\n                        {localStorage.token !== undefined ?\n                            <Redirect to={'/cabinet'} /> :\n                            <Redirect to={'/login'} />\n                        }\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.authReducer.token,\n        message: state.authReducer.message\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        userAuth: (email, password, isLogin) => dispatch(userAuth(email, password, isLogin))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\nimport {Button, Form} from \"react-bootstrap\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {userAuth} from \"../../../store/actions/authActions\";\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        repeatedPassword: '',\n        name: '',\n        surname: ''\n    };\n    setEmail = event => {\n        this.setState({email: event.target.value})\n    };\n    setPassword = event => {\n        this.setState({password: event.target.value})\n    };\n    setRepeatedPassword = event => {\n        this.setState({repeatedPassword: event.target.value})\n    };\n    setName= event => {\n        this.setState({name: event.target.value})\n    };\n    setSurname = event => {\n        this.setState({surname: event.target.value})\n    };\n    registerHandler = event => {\n        event.preventDefault();\n        this.props.userAuth(\n            this.state.email,\n            this.state.password,\n            false,\n            this.state.name,\n            this.state.surname,\n        );\n    };\n    render() {\n        const validate = (this.state.password === this.state.repeatedPassword)\n            && (this.state.password.length > 5)\n            && (this.state.repeatedPassword.length > 5)\n            && (this.state.email !== '')\n            && (this.state.password !== '')\n            && (this.state.repeatedPassword !== '')\n            && (this.state.name !== '')\n            && (this.state.surname !== '');\n        return (\n            <div className={'SignUp'}>\n                <div className=\"SignUp__content\">\n                    <h1>Регистрация</h1>\n                    <Form>\n                        <Form.Group controlId=\"name\">\n                            <Form.Control type=\"text\" placeholder=\"Введите имя\" onChange={this.setName} />\n                        </Form.Group>\n                        <Form.Group controlId=\"surname\">\n                            <Form.Control type=\"text\" placeholder=\"Введите фамилию\" onChange={this.setSurname} />\n                        </Form.Group>\n                        <Form.Group controlId=\"email\">\n                            <Form.Control type=\"email\" placeholder=\"Введите email\" onChange={this.setEmail} />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\">\n                            <Form.Control type=\"password\" placeholder=\"Введите пароль\" onChange={this.setPassword} />\n                        </Form.Group>\n                        <Form.Group controlId=\"repeatPassword\">\n                            <Form.Control type=\"password\" placeholder=\"Повторите пароль\" onChange={this.setRepeatedPassword} />\n                        </Form.Group>\n                        <small>Забыли пароль?</small>\n                        {this.props.isReg === true ?\n                            <Redirect to={'/login'} /> :\n                            <small className={'error'} style={{color: 'red', marginTop: '1rem'}}>{this.props.message}</small>\n                        }\n                        {validate ?\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.registerHandler}>\n                                Зарегестрироваться\n                            </Button> :\n                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                Зарегестрироваться\n                            </Button>\n                        }\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        message: state.authReducer.message,\n        isReg: state.authReducer.isReg\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        userAuth: (email, password, isLogin, name, surname) => dispatch(userAuth(email, password, isLogin, name, surname))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp));","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../../store/actions/authActions\";\nimport {renderData} from \"../../../store/actions/mainActions\";\nimport {Button, Form, Modal, Col} from \"react-bootstrap\";\nimport {NavLink, withRouter} from \"react-router-dom\";\nimport axios from 'axios';\n\nclass Cabinet extends Component {\n\n    state = {\n        showModal: false,\n        name: '',\n        surname: '',\n        email: '',\n        phone: '',\n        address: ''\n    };\n\n    closeModal = () => {\n      this.setState({showModal: false})\n    };\n\n    openModal = () => {\n        this.setState({showModal: true})\n    };\n\n    editHandler = async event => {\n      event.preventDefault();\n      try {\n          await axios.put(`https://coffee-shop-f5204.firebaseio.com/persons/${localStorage.userId}/${this.props.personId}.json`, {\n              name: this.state.name || this.props.personData.name,\n              surname: this.state.surname || this.props.personData.surname,\n              email: this.state.email || this.props.personData.email,\n              phone: this.state.phone || this.props.personData.phone,\n              address: this.state.address || this.props.personData.address,\n          });\n          this.setState({showModal: false});\n          this.props.renderData();\n      } catch (e) {\n          console.log(e)\n      }\n    };\n\n    componentDidMount() {\n        this.props.renderData();\n    };\n\n    logoutHandler = () => {\n      this.props.logout();\n      this.props.history.push(\"/login\");\n    };\n\n    setName = event => {\n        this.setState({name: event.target.value})\n    };\n    setSurname = event => {\n        this.setState({surname: event.target.value})\n    };\n    setEmail = event => {\n        this.setState({email: event.target.value})\n    };\n    setPhone = event => {\n        this.setState({phone: event.target.value})\n    };\n    setAddress = event => {\n        this.setState({address: event.target.value})\n    };\n\n    render() {\n        const validate =\n            (((this.state.name === '')\n                || (this.state.surname === '')\n                || (this.state.email === '')\n                || (this.state.phone === '')\n                || (this.state.address === ''))\n                && ((this.props.personData.name === '')\n                    || (this.props.personData.surname === '')\n                    || (this.props.personData.email === '')\n                    || (this.props.personData.phone === '')\n                    || (this.props.personData.address === '')));\n        return (\n            <div className={'Cabinet'}>\n\n                <Modal show={this.state.showModal} onHide={this.closeModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Редактировать профиль</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"name\">\n                                    <Form.Label>Имя</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.props.personData.name} placeholder=\"Имя\" onChange={this.setName} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"surname\">\n                                    <Form.Label>Фамилия</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.props.personData.surname} placeholder=\"Фамилия\" onChange={this.setSurname} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" defaultValue={this.props.personData.email} placeholder=\"Email\" onChange={this.setEmail} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"tel\">\n                                <Form.Label>Телефон</Form.Label>\n                                <Form.Control type=\"tel\" defaultValue={this.props.personData.phone} placeholder=\"Телефон\" onChange={this.setPhone} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"address\">\n                                <Form.Label>Адрес</Form.Label>\n                                <Form.Control type=\"email\" defaultValue={this.props.personData.address} placeholder=\"Адрес\" onChange={this.setAddress} />\n                            </Form.Group>\n\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeModal}>\n                            Закрыть\n                        </Button>\n                        {validate ?\n                            <Button variant=\"primary\" disabled>Сохранить изменения</Button> :\n                            <Button variant=\"primary\" onClick={this.editHandler}>Сохранить изменения</Button>\n                        }\n                    </Modal.Footer>\n                </Modal>\n\n               <div className=\"Cabinet__header\">\n                   <h5>{this.props.personData.name + ' ' + this.props.personData.surname}</h5>\n                   <Button variant={'secondary'} onClick={this.logoutHandler}>Выйти</Button>\n               </div>\n                <div className=\"Cabinet__content\">\n                    <h3>Информаиця пользователя</h3>\n                    <div className=\"Cabinet__content_info\">\n                        <p>Имя: <b>{this.props.personData.name}</b></p>\n                        <p>Фамилия: <b>{this.props.personData.surname}</b></p>\n                        <p>Email: <b>{this.props.personData.email}</b></p>\n                        <p>Телефон: <b>{this.props.personData.phone || 'Отсутствует'}</b></p>\n                        <p>Адрес: <b>{this.props.personData.address || 'Отсутствует'}</b></p>\n                    </div>\n                    <div className=\"Cabinet__content_orders\">\n                        <h3>Заказы</h3>\n                        <div className=\"card\" style={{padding: '2rem'}}>\n                            {this.props.orders.map((order, index) => {\n                                return (\n                                    <div key={index} className={'card'}>\n                                        <div className={'card-body'}>\n                                            <h6>Заказ №{index + 1}</h6>\n                                            <hr/>\n                                            {order.orderData.map((item, index) => {\n                                                return (\n                                                    <div key={index} className={'card'}>\n                                                        <div className=\"card-body\">\n                                                            <h6>Товар №{index + 1}</h6>\n                                                            <p><b>Название: </b>{item.name}</p>\n                                                            <p><b>Цена: </b>{item.price}</p>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                )\n                                // return (\n                                //     <div key={order+index} className={'card-body'}>\n                                //         <p><b>Название : </b>{order.orderData.name}</p>\n                                //         <p><b>Цена: </b>{order.orderData.price}₽</p>\n                                //         <p><b>Дата: </b>{order.orderData.date}</p>\n                                //     </div>\n                                // )\n                            })}\n                        </div>\n                    </div>\n                    <Button variant={'secondary'} onClick={this.openModal} style={{marginRight: '1rem'}}>Редактировать профиль</Button>\n                    <NavLink to={'/catalog'}><Button variant=\"secondary\">Каталог</Button></NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        personId: state.mainReducer.personId,\n        personData: state.mainReducer.personData,\n        orders: state.mainReducer.orders\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout()),\n        renderData: () => dispatch(renderData())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Cabinet));","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {renderData, renderItems} from \"../../../store/actions/mainActions\";\nimport {Button} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.renderItems();\n        this.props.renderData();\n    };\n\n    render() {\n        return (\n            <div className={'Dashboard'}>\n                <h1>Dashboard</h1>\n                <br/>\n                <h3>Total items: {this.props.items.length}</h3>\n                <h3>Total persons: 3</h3>\n                <h3>Total orders: {this.props.orders.length}</h3>\n\n                <NavLink to={'/catalog'}><Button variant={'secondary'}>Catalog</Button></NavLink>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.mainReducer.items,\n        orders: state.mainReducer.orders\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        renderItems: () => dispatch(renderItems()),\n        renderData: () => dispatch(renderData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, {Component} from 'react';\nimport {withRouter} from \"react-router-dom\";\n\nclass Checkout extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Hello</h1>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Checkout);","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport AdminPanel from \"../containers/admin/AdminPanel\";\nimport {Intro} from \"../main/Intro\";\nimport Catalog from \"../main/catalog/Catalog\";\nimport AdminEnter from \"../containers/admin/AdminEnter\";\nimport ModeratorEnter from \"../containers/moderator/ModeratorEnter\";\nimport ModeratorPanel from \"../containers/moderator/ModeratorPanel\";\nimport SignIn from \"../containers/user/SignIn\";\nimport SignUp from \"../containers/user/SignUp\";\nimport Cabinet from \"../containers/user/Cabinet\";\nimport Dashboard from \"../containers/dashboard/Dashboard\";\nimport Checkout from \"../main/catalog/Checkout\";\n\nexport const Router = () => {\n  return (\n      <Switch>\n          {/*User Routes*/}\n          <Route path={'/'} exact>\n              <Intro />\n          </Route>\n          <Route path={'/catalog'}>\n              <Catalog />\n          </Route>\n          <Route path={'/checkout'}>\n              <Checkout />\n          </Route>\n          <Route path={'/login'}>\n              <SignIn />\n          </Route>\n          <Route path={'/reg'}>\n              <SignUp />\n          </Route>\n          <Route path={'/cabinet'}>\n              <Cabinet />\n          </Route>\n          {/*Admin Routes*/}\n          <Route path={'/adminEnter'}>\n              <AdminEnter />\n          </Route>\n          <Route path={'/adminPanel'}>\n              <AdminPanel />\n          </Route>\n          {/*Moderator Enter*/}\n          <Route path={'/moderEnter'}>\n              <ModeratorEnter />\n          </Route>\n          <Route path={'/moderPanel'}>\n              <ModeratorPanel />\n          </Route>\n\n          <Route path={'/dashboard'}>\n              <Dashboard />\n          </Route>\n      </Switch>\n  )\n};","import React, {Component} from 'react';\nimport './styles/Styles.scss';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router} from \"./components/HOC/Router\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className={'App'}>\n                <Router />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {applyMiddleware, createStore, compose} from \"redux\";\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport App from \"./App\";\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst application = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(application, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}